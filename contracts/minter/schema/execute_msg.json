{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ExecuteMsg",
  "oneOf": [
    {
      "type": "object",
      "required": [
        "update_minter"
      ],
      "properties": {
        "update_minter": {
          "type": "object",
          "required": [
            "asset",
            "new_minter"
          ],
          "properties": {
            "asset": {
              "type": "string"
            },
            "new_minter": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "execute_migration"
      ],
      "properties": {
        "execute_migration": {
          "$ref": "#/definitions/MigrationReq"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "add_token"
      ],
      "properties": {
        "add_token": {
          "type": "object",
          "required": [
            "burner_token_addr",
            "minter_token_addr",
            "token_type"
          ],
          "properties": {
            "burner_token_addr": {
              "type": "string"
            },
            "minter_token_addr": {
              "type": "string"
            },
            "token_type": {
              "$ref": "#/definitions/TokenType"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "remove_token"
      ],
      "properties": {
        "remove_token": {
          "type": "object",
          "required": [
            "burner_token_addr"
          ],
          "properties": {
            "burner_token_addr": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "update_owner"
      ],
      "properties": {
        "update_owner": {
          "type": "object",
          "required": [
            "new_owner"
          ],
          "properties": {
            "new_owner": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "MigrationReq": {
      "type": "object",
      "required": [
        "asset",
        "burner_id",
        "to"
      ],
      "properties": {
        "asset": {
          "type": "string"
        },
        "burner_id": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "nft_req": {
          "anyOf": [
            {
              "$ref": "#/definitions/NftMigrationReq"
            },
            {
              "type": "null"
            }
          ]
        },
        "to": {
          "type": "string"
        },
        "token_req": {
          "anyOf": [
            {
              "$ref": "#/definitions/TokenMigrationReq"
            },
            {
              "type": "null"
            }
          ]
        }
      }
    },
    "NftExtension": {
      "type": "object",
      "required": [
        "attributes"
      ],
      "properties": {
        "animation_url": {
          "type": [
            "string",
            "null"
          ]
        },
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NftExtensionDisplay"
          }
        },
        "background_color": {
          "type": [
            "string",
            "null"
          ]
        },
        "description": {
          "type": [
            "string",
            "null"
          ]
        },
        "external_url": {
          "type": [
            "string",
            "null"
          ]
        },
        "image": {
          "type": [
            "string",
            "null"
          ]
        },
        "image_data": {
          "type": [
            "string",
            "null"
          ]
        },
        "name": {
          "type": [
            "string",
            "null"
          ]
        },
        "youtube_url": {
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "NftExtensionDisplay": {
      "type": "object",
      "properties": {
        "display_type": {
          "type": [
            "string",
            "null"
          ]
        },
        "trait_type": {
          "type": [
            "string",
            "null"
          ]
        },
        "value": {
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "NftMigrationReq": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "extension": {
          "anyOf": [
            {
              "$ref": "#/definitions/NftExtension"
            },
            {
              "type": "null"
            }
          ]
        },
        "id": {
          "type": "string"
        },
        "uri": {
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "TokenMigrationReq": {
      "type": "object",
      "required": [
        "amount"
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/Uint128"
        }
      }
    },
    "TokenType": {
      "type": "string",
      "enum": [
        "native",
        "cw20",
        "cw721"
      ]
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    }
  }
}
